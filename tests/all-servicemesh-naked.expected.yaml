---
# Source: servicemesh/templates/ingressGateway.yaml
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: control-gateway
  namespace: istio-system
  annotations:
    maistra.io/manageRoute: 'false'
    argocd.argoproj.io/sync-options: Validate=false, SkipDryRunOnMissingResource=true
spec:
  servers:
    - hosts:
        - istio-ingressgateway-istio-system.
      port:
        name: http
        number: 80
        protocol: HTTP
  selector:
    istio: ingressgateway
---
# Source: servicemesh/templates/jaeger.yaml
apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger-production
spec:
  strategy: production
  storage:
    type: elasticsearch
    esIndexCleaner:
      enabled: true
      numberOfDays: 7
      schedule: '55 23 * * *'
    elasticsearch:
      nodeCount: 1
      storage:
        size: 1Gi
      resources:
        requests:
          cpu: 200m
          memory: 2Gi
        limits:
          memory: 2Gi
      redundancyPolicy: ZeroRedundancy
---
# Source: servicemesh/templates/smcp.yaml
apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: production
spec:
  security:
    dataPlane:
      automtls: true
      mtls: true
  tracing:
    sampling: 10000
    type: Jaeger
  general:
    logging:
      logAsJSON: true
  profiles:
    - default
  proxy:
    runtime:
      container:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 128Mi
    accessLogging:
      file:
        name: /dev/stdout
    networking:
      trafficControl:
        inbound: {}
        outbound:
          policy: REGISTRY_ONLY  
  gateways:
    egress:
      enabled: true
      runtime:
        deployment:
          autoScaling:
            enabled: true
            maxReplicas: 2
            minReplicas: 2
        pod: {}
      service: {}
    enabled: true
    ingress:
      enabled: true
      runtime:
        deployment:
          autoScaling:
            enabled: true
            maxReplicas: 2
            minReplicas: 2
        pod: {}
      service: {}
    openshiftRoute:
      enabled: false
  policy:
    type: Istiod
  addons:    
    grafana:
      enabled: true
      install:
        config:
          env: {}
          envSecrets: {}
        persistence:
          enabled: true
          storageClassName: ""
          accessMode: ReadWriteOnce
          capacity:
            requests:
              storage: 5Gi
        service:
          ingress:
            contextPath: /grafana
            tls:
              termination: reencrypt 
    jaeger:
      name: jaeger-production
      install:
        ingress:
          enabled: true
        storage:
          type: Elasticsearch
    kiali:
      enabled: true
    prometheus:
      enabled: true
  runtime:    
    components:
      pilot:
        deployment:
          replicas: 2
        pod:
          affinity: {}
        container: {}
      grafana:
        deployment: {}
        pod: {}
      kiali:
        deployment: {}
        pod: {}
  version: v2.4
  telemetry:
    type: Istiod
